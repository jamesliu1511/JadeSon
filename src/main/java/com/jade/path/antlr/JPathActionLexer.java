// Generated from JPathAction.g4 by ANTLR 4.10.1

	package com.jade.path.antlr;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class JPathActionLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.10.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, Literal=24, 
		FLOAT=25, INT=26, WS=27, NCName=28, Number=29;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
			"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
			"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "Literal", "FLOAT", 
			"INT", "WS", "NCName", "Number", "Digits", "NCNameStartChar", "NCNameChar"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'/'", "'['", "']'", "'('", "','", "')'", "'@'", "'fm:'", "'*'", 
			"'?'", "'{'", "'}'", "'ft:'", "'<'", "'>'", "'||'", "'&&'", "'<='", "'>='", 
			"'=='", "'fv:'", "'fn:'", "'$'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			"Literal", "FLOAT", "INT", "WS", "NCName", "Number"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public JPathActionLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "JPathAction.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u001d\u00cb\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014"+
		"\u0002\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017"+
		"\u0002\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a"+
		"\u0002\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d"+
		"\u0002\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0001\u0000\u0001\u0000"+
		"\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003"+
		"\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006"+
		"\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\b\u0001\b\u0001"+
		"\t\u0001\t\u0001\n\u0001\n\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001"+
		"\f\u0001\f\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f"+
		"\u0001\u000f\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0011\u0001\u0011"+
		"\u0001\u0011\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0013\u0001\u0013"+
		"\u0001\u0013\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0015"+
		"\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0016\u0001\u0016\u0001\u0017"+
		"\u0001\u0017\u0005\u0017\u007f\b\u0017\n\u0017\f\u0017\u0082\t\u0017\u0001"+
		"\u0017\u0001\u0017\u0001\u0017\u0005\u0017\u0087\b\u0017\n\u0017\f\u0017"+
		"\u008a\t\u0017\u0001\u0017\u0003\u0017\u008d\b\u0017\u0001\u0018\u0003"+
		"\u0018\u0090\b\u0018\u0001\u0018\u0004\u0018\u0093\b\u0018\u000b\u0018"+
		"\f\u0018\u0094\u0001\u0018\u0001\u0018\u0004\u0018\u0099\b\u0018\u000b"+
		"\u0018\f\u0018\u009a\u0001\u0019\u0003\u0019\u009e\b\u0019\u0001\u0019"+
		"\u0004\u0019\u00a1\b\u0019\u000b\u0019\f\u0019\u00a2\u0001\u001a\u0004"+
		"\u001a\u00a6\b\u001a\u000b\u001a\f\u001a\u00a7\u0001\u001a\u0001\u001a"+
		"\u0001\u001b\u0001\u001b\u0005\u001b\u00ae\b\u001b\n\u001b\f\u001b\u00b1"+
		"\t\u001b\u0001\u001c\u0003\u001c\u00b4\b\u001c\u0001\u001c\u0001\u001c"+
		"\u0001\u001c\u0003\u001c\u00b9\b\u001c\u0003\u001c\u00bb\b\u001c\u0001"+
		"\u001c\u0001\u001c\u0003\u001c\u00bf\b\u001c\u0001\u001d\u0004\u001d\u00c2"+
		"\b\u001d\u000b\u001d\f\u001d\u00c3\u0001\u001e\u0001\u001e\u0001\u001f"+
		"\u0001\u001f\u0003\u001f\u00ca\b\u001f\u0000\u0000 \u0001\u0001\u0003"+
		"\u0002\u0005\u0003\u0007\u0004\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011"+
		"\t\u0013\n\u0015\u000b\u0017\f\u0019\r\u001b\u000e\u001d\u000f\u001f\u0010"+
		"!\u0011#\u0012%\u0013\'\u0014)\u0015+\u0016-\u0017/\u00181\u00193\u001a"+
		"5\u001b7\u001c9\u001d;\u0000=\u0000?\u0000\u0001\u0000\u0006\u0001\u0000"+
		"\"\"\u0001\u0000\'\'\u0001\u000009\u0003\u0000\t\n\r\r  \u000e\u0000A"+
		"Z__az\u00c0\u00d6\u00d8\u00f6\u00f8\u02ff\u0370\u037d\u037f\u1fff\u200c"+
		"\u200d\u2070\u218f\u2c00\u2fef\u3001\u8000\ud7ff\u8000\uf900\u8000\ufdcf"+
		"\u8000\ufdf0\u8000\ufffd\u0005\u0000-.09\u00b7\u00b7\u0300\u036f\u203f"+
		"\u2040\u00d7\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0003\u0001\u0000"+
		"\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007\u0001\u0000"+
		"\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000"+
		"\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000"+
		"\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000"+
		"\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000"+
		"\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0000"+
		"\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0000"+
		"\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000%"+
		"\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000\u0000\u0000)\u0001"+
		"\u0000\u0000\u0000\u0000+\u0001\u0000\u0000\u0000\u0000-\u0001\u0000\u0000"+
		"\u0000\u0000/\u0001\u0000\u0000\u0000\u00001\u0001\u0000\u0000\u0000\u0000"+
		"3\u0001\u0000\u0000\u0000\u00005\u0001\u0000\u0000\u0000\u00007\u0001"+
		"\u0000\u0000\u0000\u00009\u0001\u0000\u0000\u0000\u0001A\u0001\u0000\u0000"+
		"\u0000\u0003C\u0001\u0000\u0000\u0000\u0005E\u0001\u0000\u0000\u0000\u0007"+
		"G\u0001\u0000\u0000\u0000\tI\u0001\u0000\u0000\u0000\u000bK\u0001\u0000"+
		"\u0000\u0000\rM\u0001\u0000\u0000\u0000\u000fO\u0001\u0000\u0000\u0000"+
		"\u0011S\u0001\u0000\u0000\u0000\u0013U\u0001\u0000\u0000\u0000\u0015W"+
		"\u0001\u0000\u0000\u0000\u0017Y\u0001\u0000\u0000\u0000\u0019[\u0001\u0000"+
		"\u0000\u0000\u001b_\u0001\u0000\u0000\u0000\u001da\u0001\u0000\u0000\u0000"+
		"\u001fc\u0001\u0000\u0000\u0000!f\u0001\u0000\u0000\u0000#i\u0001\u0000"+
		"\u0000\u0000%l\u0001\u0000\u0000\u0000\'o\u0001\u0000\u0000\u0000)r\u0001"+
		"\u0000\u0000\u0000+v\u0001\u0000\u0000\u0000-z\u0001\u0000\u0000\u0000"+
		"/\u008c\u0001\u0000\u0000\u00001\u008f\u0001\u0000\u0000\u00003\u009d"+
		"\u0001\u0000\u0000\u00005\u00a5\u0001\u0000\u0000\u00007\u00ab\u0001\u0000"+
		"\u0000\u00009\u00be\u0001\u0000\u0000\u0000;\u00c1\u0001\u0000\u0000\u0000"+
		"=\u00c5\u0001\u0000\u0000\u0000?\u00c9\u0001\u0000\u0000\u0000AB\u0005"+
		"/\u0000\u0000B\u0002\u0001\u0000\u0000\u0000CD\u0005[\u0000\u0000D\u0004"+
		"\u0001\u0000\u0000\u0000EF\u0005]\u0000\u0000F\u0006\u0001\u0000\u0000"+
		"\u0000GH\u0005(\u0000\u0000H\b\u0001\u0000\u0000\u0000IJ\u0005,\u0000"+
		"\u0000J\n\u0001\u0000\u0000\u0000KL\u0005)\u0000\u0000L\f\u0001\u0000"+
		"\u0000\u0000MN\u0005@\u0000\u0000N\u000e\u0001\u0000\u0000\u0000OP\u0005"+
		"f\u0000\u0000PQ\u0005m\u0000\u0000QR\u0005:\u0000\u0000R\u0010\u0001\u0000"+
		"\u0000\u0000ST\u0005*\u0000\u0000T\u0012\u0001\u0000\u0000\u0000UV\u0005"+
		"?\u0000\u0000V\u0014\u0001\u0000\u0000\u0000WX\u0005{\u0000\u0000X\u0016"+
		"\u0001\u0000\u0000\u0000YZ\u0005}\u0000\u0000Z\u0018\u0001\u0000\u0000"+
		"\u0000[\\\u0005f\u0000\u0000\\]\u0005t\u0000\u0000]^\u0005:\u0000\u0000"+
		"^\u001a\u0001\u0000\u0000\u0000_`\u0005<\u0000\u0000`\u001c\u0001\u0000"+
		"\u0000\u0000ab\u0005>\u0000\u0000b\u001e\u0001\u0000\u0000\u0000cd\u0005"+
		"|\u0000\u0000de\u0005|\u0000\u0000e \u0001\u0000\u0000\u0000fg\u0005&"+
		"\u0000\u0000gh\u0005&\u0000\u0000h\"\u0001\u0000\u0000\u0000ij\u0005<"+
		"\u0000\u0000jk\u0005=\u0000\u0000k$\u0001\u0000\u0000\u0000lm\u0005>\u0000"+
		"\u0000mn\u0005=\u0000\u0000n&\u0001\u0000\u0000\u0000op\u0005=\u0000\u0000"+
		"pq\u0005=\u0000\u0000q(\u0001\u0000\u0000\u0000rs\u0005f\u0000\u0000s"+
		"t\u0005v\u0000\u0000tu\u0005:\u0000\u0000u*\u0001\u0000\u0000\u0000vw"+
		"\u0005f\u0000\u0000wx\u0005n\u0000\u0000xy\u0005:\u0000\u0000y,\u0001"+
		"\u0000\u0000\u0000z{\u0005$\u0000\u0000{.\u0001\u0000\u0000\u0000|\u0080"+
		"\u0005\"\u0000\u0000}\u007f\b\u0000\u0000\u0000~}\u0001\u0000\u0000\u0000"+
		"\u007f\u0082\u0001\u0000\u0000\u0000\u0080~\u0001\u0000\u0000\u0000\u0080"+
		"\u0081\u0001\u0000\u0000\u0000\u0081\u0083\u0001\u0000\u0000\u0000\u0082"+
		"\u0080\u0001\u0000\u0000\u0000\u0083\u008d\u0005\"\u0000\u0000\u0084\u0088"+
		"\u0005\'\u0000\u0000\u0085\u0087\b\u0001\u0000\u0000\u0086\u0085\u0001"+
		"\u0000\u0000\u0000\u0087\u008a\u0001\u0000\u0000\u0000\u0088\u0086\u0001"+
		"\u0000\u0000\u0000\u0088\u0089\u0001\u0000\u0000\u0000\u0089\u008b\u0001"+
		"\u0000\u0000\u0000\u008a\u0088\u0001\u0000\u0000\u0000\u008b\u008d\u0005"+
		"\'\u0000\u0000\u008c|\u0001\u0000\u0000\u0000\u008c\u0084\u0001\u0000"+
		"\u0000\u0000\u008d0\u0001\u0000\u0000\u0000\u008e\u0090\u0005-\u0000\u0000"+
		"\u008f\u008e\u0001\u0000\u0000\u0000\u008f\u0090\u0001\u0000\u0000\u0000"+
		"\u0090\u0092\u0001\u0000\u0000\u0000\u0091\u0093\u0007\u0002\u0000\u0000"+
		"\u0092\u0091\u0001\u0000\u0000\u0000\u0093\u0094\u0001\u0000\u0000\u0000"+
		"\u0094\u0092\u0001\u0000\u0000\u0000\u0094\u0095\u0001\u0000\u0000\u0000"+
		"\u0095\u0096\u0001\u0000\u0000\u0000\u0096\u0098\u0005.\u0000\u0000\u0097"+
		"\u0099\u0007\u0002\u0000\u0000\u0098\u0097\u0001\u0000\u0000\u0000\u0099"+
		"\u009a\u0001\u0000\u0000\u0000\u009a\u0098\u0001\u0000\u0000\u0000\u009a"+
		"\u009b\u0001\u0000\u0000\u0000\u009b2\u0001\u0000\u0000\u0000\u009c\u009e"+
		"\u0005-\u0000\u0000\u009d\u009c\u0001\u0000\u0000\u0000\u009d\u009e\u0001"+
		"\u0000\u0000\u0000\u009e\u00a0\u0001\u0000\u0000\u0000\u009f\u00a1\u0007"+
		"\u0002\u0000\u0000\u00a0\u009f\u0001\u0000\u0000\u0000\u00a1\u00a2\u0001"+
		"\u0000\u0000\u0000\u00a2\u00a0\u0001\u0000\u0000\u0000\u00a2\u00a3\u0001"+
		"\u0000\u0000\u0000\u00a34\u0001\u0000\u0000\u0000\u00a4\u00a6\u0007\u0003"+
		"\u0000\u0000\u00a5\u00a4\u0001\u0000\u0000\u0000\u00a6\u00a7\u0001\u0000"+
		"\u0000\u0000\u00a7\u00a5\u0001\u0000\u0000\u0000\u00a7\u00a8\u0001\u0000"+
		"\u0000\u0000\u00a8\u00a9\u0001\u0000\u0000\u0000\u00a9\u00aa\u0006\u001a"+
		"\u0000\u0000\u00aa6\u0001\u0000\u0000\u0000\u00ab\u00af\u0003=\u001e\u0000"+
		"\u00ac\u00ae\u0003?\u001f\u0000\u00ad\u00ac\u0001\u0000\u0000\u0000\u00ae"+
		"\u00b1\u0001\u0000\u0000\u0000\u00af\u00ad\u0001\u0000\u0000\u0000\u00af"+
		"\u00b0\u0001\u0000\u0000\u0000\u00b08\u0001\u0000\u0000\u0000\u00b1\u00af"+
		"\u0001\u0000\u0000\u0000\u00b2\u00b4\u0005-\u0000\u0000\u00b3\u00b2\u0001"+
		"\u0000\u0000\u0000\u00b3\u00b4\u0001\u0000\u0000\u0000\u00b4\u00b5\u0001"+
		"\u0000\u0000\u0000\u00b5\u00ba\u0003;\u001d\u0000\u00b6\u00b8\u0005.\u0000"+
		"\u0000\u00b7\u00b9\u0003;\u001d\u0000\u00b8\u00b7\u0001\u0000\u0000\u0000"+
		"\u00b8\u00b9\u0001\u0000\u0000\u0000\u00b9\u00bb\u0001\u0000\u0000\u0000"+
		"\u00ba\u00b6\u0001\u0000\u0000\u0000\u00ba\u00bb\u0001\u0000\u0000\u0000"+
		"\u00bb\u00bf\u0001\u0000\u0000\u0000\u00bc\u00bd\u0005.\u0000\u0000\u00bd"+
		"\u00bf\u0003;\u001d\u0000\u00be\u00b3\u0001\u0000\u0000\u0000\u00be\u00bc"+
		"\u0001\u0000\u0000\u0000\u00bf:\u0001\u0000\u0000\u0000\u00c0\u00c2\u0002"+
		"09\u0000\u00c1\u00c0\u0001\u0000\u0000\u0000\u00c2\u00c3\u0001\u0000\u0000"+
		"\u0000\u00c3\u00c1\u0001\u0000\u0000\u0000\u00c3\u00c4\u0001\u0000\u0000"+
		"\u0000\u00c4<\u0001\u0000\u0000\u0000\u00c5\u00c6\u0007\u0004\u0000\u0000"+
		"\u00c6>\u0001\u0000\u0000\u0000\u00c7\u00ca\u0003=\u001e\u0000\u00c8\u00ca"+
		"\u0007\u0005\u0000\u0000\u00c9\u00c7\u0001\u0000\u0000\u0000\u00c9\u00c8"+
		"\u0001\u0000\u0000\u0000\u00ca@\u0001\u0000\u0000\u0000\u0011\u0000\u0080"+
		"\u0088\u008c\u008f\u0094\u009a\u009d\u00a2\u00a7\u00af\u00b3\u00b8\u00ba"+
		"\u00be\u00c3\u00c9\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}